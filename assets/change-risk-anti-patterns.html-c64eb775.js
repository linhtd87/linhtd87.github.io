import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as c,c as t,f as e}from"./app-626cd70a.js";const n={},r=e(`<h1 id="change-risk-anti-patterns" tabindex="-1"><a class="header-anchor" href="#change-risk-anti-patterns" aria-hidden="true">#</a> Change Risk Anti Patterns</h1><h2 id="crap" tabindex="-1"><a class="header-anchor" href="#crap" aria-hidden="true">#</a> CRAP</h2><p>Cách chơi chữ &quot;Crap&quot; nghĩa là Cứt, Your code is Crap có nghĩa là Mã của bạn như Cứt.</p><h2 id="code-complexity-risk" tabindex="-1"><a class="header-anchor" href="#code-complexity-risk" aria-hidden="true">#</a> Code, Complexity &amp; Risk</h2><p>Chỉ số <strong>change risk anti-patterns</strong> là thước đo &quot;rủi ro&quot; liên quan đến mã của bạn. Hiểu được các mô hình chống rủi ro<br> thay đổi và mối tương quan giữa độ phức tạp của mã (code complexity) và độ bao phủ của mã (code coverage) là rất quan<br> trọng đối với các nhóm phát triển muốn duy trì sức khỏe tổng thể và chất lượng của cơ sở mã của họ.</p><h2 id="code-complexity-risk-1" tabindex="-1"><a class="header-anchor" href="#code-complexity-risk-1" aria-hidden="true">#</a> Code, Complexity &amp; Risk</h2><h2 id="so-lieu-crap" tabindex="-1"><a class="header-anchor" href="#so-lieu-crap" aria-hidden="true">#</a> Số liệu CRAP</h2><p>Đo lường C.R.A.P. (Thay đổi rủi ro chống mô hình) điểm. Nó được thiết kế để phân tích và dự đoán lượng nỗ lực, nỗi đau<br> và thời gian cần thiết để duy trì một phần mã hiện có.</p><p>Một method có điểm CRAP trên 30 được coi là CRAPpy (tức là không thể chấp nhận được).</p><h2 id="cong-thuc-crap" tabindex="-1"><a class="header-anchor" href="#cong-thuc-crap" aria-hidden="true">#</a> Công thức CRAP</h2><p>Cho một method m, C.R.A.P. cho m được tính như sau:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>C.R.A.P.(m) = comp(m)^2 * (1 – cov(m)/100)^3 + comp(m)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Trong đó <strong>comp(m)</strong> là độ phức tạp cyclomatic của phương pháp m và <strong>cov(m)</strong> là kiểm thử code coverage được cung cấp<br> bởi<br> các bài kiểm tra tự động.</p>`,13),i=[r];function h(o,s){return c(),t("div",null,i)}const m=a(n,[["render",h],["__file","change-risk-anti-patterns.html.vue"]]);export{m as default};
